package files;

import files.datatypes.FilePath;

/**
 * Exception generated by the file subsystem.
 * @author Jaime
 *
 */
public class FileExceptions extends Exception{
	private static final long serialVersionUID = 2219233707558869134L;
	
	/**
	 * Exception thrown when a project id which is not supposed to be used
	 * is already in the database.
	 * @author Jaime
	 *
	 */
	public static class ProjectAlreadyExists extends FileExceptions{

		private static final long serialVersionUID = -3768878269292978253L;
		
	}
	
	/**
	 * Exception thrown when you try to store a version whose id is already in
	 * the database.
	 * @author Jaime
	 *
	 */
	public static class VersionAlreadyExists extends FileExceptions{

		private static final long serialVersionUID = 1L;
		
	}
	
	/**
	 * Thrown when access is solicited to a project which does not exist.
	 * @author Jaime
	 *
	 */
	public static class InexistentProject extends FileExceptions{
		private final FilePath project;
		public InexistentProject(final FilePath project) {
			this.project = project;
		}
		private static final long serialVersionUID = 12L;
		
	}
	
	/**
	 * Thrown when access is solicited to a file which does not exist.
	 * @author Jaime
	 *
	 */
	public static class InexistentFile extends FileExceptions{

		private final FilePath file;

		public InexistentFile(final FilePath file) {
			this.file = file;
		}

		private static final long serialVersionUID = 12L;
		
	}
}
